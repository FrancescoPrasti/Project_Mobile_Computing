//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/PgPrincipale/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Terreno"",
            ""id"": ""dbfbaff2-3fbc-4ad2-9b77-632da263a411"",
            ""actions"": [
                {
                    ""name"": ""Movimento"",
                    ""type"": ""Value"",
                    ""id"": ""42ca624c-3ac8-40e6-8477-5f322bf844e4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Salto"",
                    ""type"": ""Button"",
                    ""id"": ""f1145eac-390e-4213-bd4c-92b0694255b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""c800bc06-b467-45af-a482-10bd76c05d9e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attacco"",
                    ""type"": ""Button"",
                    ""id"": ""e925d1be-fdf4-44e5-9608-c9d5d2cd1092"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap(duration=0.1)"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""965732c9-dc67-48ca-bd4d-a7d850fad261"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""8bf63b65-0d97-4b4c-9921-3c692e388384"",
                    ""path"": ""1DAxis"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimento"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""3ea5ca27-fb74-4994-a6cf-be925c340e44"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""d63cb8ad-4e7b-4cfe-8d8f-83ef50fd6263"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""07f7f528-ac83-4cf9-bf0a-85dea119e602"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Salto"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1fb6d48e-bf16-461f-b057-716fd6d665e8"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2faa8b4-1141-4b28-a03c-26ba14e7e810"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attacco"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Terreno
        m_Terreno = asset.FindActionMap("Terreno", throwIfNotFound: true);
        m_Terreno_Movimento = m_Terreno.FindAction("Movimento", throwIfNotFound: true);
        m_Terreno_Salto = m_Terreno.FindAction("Salto", throwIfNotFound: true);
        m_Terreno_Shoot = m_Terreno.FindAction("Shoot", throwIfNotFound: true);
        m_Terreno_Attacco = m_Terreno.FindAction("Attacco", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Terreno
    private readonly InputActionMap m_Terreno;
    private List<ITerrenoActions> m_TerrenoActionsCallbackInterfaces = new List<ITerrenoActions>();
    private readonly InputAction m_Terreno_Movimento;
    private readonly InputAction m_Terreno_Salto;
    private readonly InputAction m_Terreno_Shoot;
    private readonly InputAction m_Terreno_Attacco;
    public struct TerrenoActions
    {
        private @PlayerControls m_Wrapper;
        public TerrenoActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movimento => m_Wrapper.m_Terreno_Movimento;
        public InputAction @Salto => m_Wrapper.m_Terreno_Salto;
        public InputAction @Shoot => m_Wrapper.m_Terreno_Shoot;
        public InputAction @Attacco => m_Wrapper.m_Terreno_Attacco;
        public InputActionMap Get() { return m_Wrapper.m_Terreno; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TerrenoActions set) { return set.Get(); }
        public void AddCallbacks(ITerrenoActions instance)
        {
            if (instance == null || m_Wrapper.m_TerrenoActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TerrenoActionsCallbackInterfaces.Add(instance);
            @Movimento.started += instance.OnMovimento;
            @Movimento.performed += instance.OnMovimento;
            @Movimento.canceled += instance.OnMovimento;
            @Salto.started += instance.OnSalto;
            @Salto.performed += instance.OnSalto;
            @Salto.canceled += instance.OnSalto;
            @Shoot.started += instance.OnShoot;
            @Shoot.performed += instance.OnShoot;
            @Shoot.canceled += instance.OnShoot;
            @Attacco.started += instance.OnAttacco;
            @Attacco.performed += instance.OnAttacco;
            @Attacco.canceled += instance.OnAttacco;
        }

        private void UnregisterCallbacks(ITerrenoActions instance)
        {
            @Movimento.started -= instance.OnMovimento;
            @Movimento.performed -= instance.OnMovimento;
            @Movimento.canceled -= instance.OnMovimento;
            @Salto.started -= instance.OnSalto;
            @Salto.performed -= instance.OnSalto;
            @Salto.canceled -= instance.OnSalto;
            @Shoot.started -= instance.OnShoot;
            @Shoot.performed -= instance.OnShoot;
            @Shoot.canceled -= instance.OnShoot;
            @Attacco.started -= instance.OnAttacco;
            @Attacco.performed -= instance.OnAttacco;
            @Attacco.canceled -= instance.OnAttacco;
        }

        public void RemoveCallbacks(ITerrenoActions instance)
        {
            if (m_Wrapper.m_TerrenoActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITerrenoActions instance)
        {
            foreach (var item in m_Wrapper.m_TerrenoActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TerrenoActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TerrenoActions @Terreno => new TerrenoActions(this);
    public interface ITerrenoActions
    {
        void OnMovimento(InputAction.CallbackContext context);
        void OnSalto(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnAttacco(InputAction.CallbackContext context);
    }
}
